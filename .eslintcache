[{"C:\\Users\\steph\\Desktop\\Sans-Alcool\\test\\src\\index.js":"1","C:\\Users\\steph\\Desktop\\Sans-Alcool\\test\\src\\App.js":"2","C:\\Users\\steph\\Desktop\\Sans-Alcool\\test\\src\\reportWebVitals.js":"3","C:\\Users\\steph\\Desktop\\Sans-Alcool\\test\\src\\components\\Song\\index.js":"4","C:\\Users\\steph\\Desktop\\Sans-Alcool\\test\\src\\components\\Game\\index.js":"5"},{"size":288,"mtime":1608145416188,"results":"6","hashOfConfig":"7"},{"size":1396,"mtime":1608146504465,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1606575978700,"results":"9","hashOfConfig":"7"},{"size":21044,"mtime":1608147924472,"results":"10","hashOfConfig":"7"},{"size":4889,"mtime":1608147826121,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"5g6dal",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\steph\\Desktop\\Sans-Alcool\\test\\src\\index.js",[],["24","25"],"C:\\Users\\steph\\Desktop\\Sans-Alcool\\test\\src\\App.js",[],"C:\\Users\\steph\\Desktop\\Sans-Alcool\\test\\src\\reportWebVitals.js",[],"C:\\Users\\steph\\Desktop\\Sans-Alcool\\test\\src\\components\\Song\\index.js",[],"C:\\Users\\steph\\Desktop\\Sans-Alcool\\test\\src\\components\\Game\\index.js",["26","27"],"//  !!!!!---- GAME ----!!!!!\r\n\r\n\r\n// Pour toutes les pages (sauf App), il faut importer React\r\n// POur manipuler les données/states, il faut importer useState(hook)\r\nimport React, { useState } from \"react\";\r\n// Pour créer un lien avec ReactJs, il faut l'installer via votre terminal et importer une extention appeler react-router-dom.\r\n// Voir la documentation https://reactrouter.com/web/guides/quick-start\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n// En ReactJs, quand on crée une fonction, constante, class il faut toujours un return()\r\nconst Game = () => {\r\n\r\n    // Pour manipuler/modifier une donnée/state\r\n    // number = nom du state\r\n    // setNumber = nom pour indiquer que le state est modifié\r\n    // useState() = on indique la nature du state\r\n    const [number, setNumber] = useState(\"\");\r\n    const [numbers, setNumbers] = useState(number);\r\n    \r\n    // number est relié à l'input. Il récupére la valeur qui est une chaîne de caractére (useState(\"\"))\r\n    // numbers est relié à number. Je modifie number pour crée numbers\r\n\r\n    // Pour crée cette application j'ai besoin ...\r\n\r\n        // 1 - D'événements\r\n            // Fonction appliquée au bouton avec un événement onClick()\r\n            // Fonction qui modifie via setNumbers la valeur number récupérée et ajoute un style à la div selectionnée\r\n            const addSong = () => {\r\n                setNumbers( number - 1);\r\n                let song = document.querySelector(\".blocParoles\");\r\n                song.style.display = \"block\";\r\n            };\r\n\r\n            // Fonction qui fait disparaître les paroles via un événement onClick() sur input\r\n            const displaySong = () =>{\r\n                let song = document.querySelector(\".blocParoles\");\r\n                setTimeout(() =>{\r\n                    song.style.display = 'none';\r\n                },1000)\r\n            };\r\n\r\n        // 2 - De paroles\r\n            // J'utilise les states number et numbers que j'affiche avec {}\r\n            function Song99() {\r\n                return <p>🎵 {number} shooters sans alcool sur le mur, {number} shooters sans alcool.<br/>\r\n                Bois en un et au suivant ! {numbers} shooters sans alcool sur le mur. 🎵</p>;\r\n            }\r\n\r\n            function Song1() {\r\n                return <p>🎵 {number} shooter sans alcool sur le mur, {number} shooter sans alcool.<br/>\r\n                Bois en un et au suivant ! Plus de shooters sans alcool sur le mur. 🎵</p>;\r\n            }\r\n\r\n            function Song0() {\r\n                return <p>🎵 Plus de shooters sans alcool sur le mur, plus de shooters sans alcool.<br/>\r\n                Vas au supermarché pour en acheter, 99 shooters sans alcool sur le mur. 🎵</p>;\r\n            }\r\n    \r\n        // 3 - Des si...\r\n            // A chaque condition, j'affiche le text correspondant\r\n            function AllSong() {  \r\n                if (number >= 2 && number < 100) {    \r\n                    return <Song99 />;  \r\n                }if(number == 1){\r\n                    return <Song1 />\r\n                }if(number == 0){\r\n                    return <Song0 />\r\n                }else{\r\n                    return \"Vous devez rentrer un nomnre entre 0 et 99 !\"\r\n                }\r\n            }\r\n                \r\n        // 4 - Un template\r\n            return (\r\n                <div className=\"blocGames\">     \r\n                    <div className=\"blocNumber\">\r\n\r\n                        <h1> 🍸 La petite chanson de Nico ! 🍸</h1>\r\n\r\n                        <input \r\n                        className=\"inputNumber\"\r\n                        // On récupére la valeur de l'input avec la onChange, en utulisant le useState de number\r\n                        onChange={(e) => setNumber(e.target.value)}\r\n                        value={number}\r\n                        // On applique l'événement onClick de la fonction displaySong pour effacer les paroles\r\n                        onClick={displaySong}\r\n                        type=\"text\"/>\r\n\r\n                        {/* On applique l'événement onClick de la fonction addSong pour faire apparaître les paroles */}\r\n                        <button onClick={addSong}> \r\n                            Afficher le couplet !\r\n                        </button>\r\n\r\n                    </div>    \r\n\r\n                    {/* Ici, on importe la fonction AllSong qui affichera les paroles correspondantes aux conditions */}\r\n                    <div className=\"blocParoles\">\r\n                        <AllSong/>\r\n                    </div>\r\n\r\n                    <div className=\"btn\">\r\n                        <Link to=\"/chanson\"><button>Version karaoké ?</button></Link>\r\n                    </div>  \r\n\r\n                </div>\r\n            )\r\n}\r\n\r\n// class, const ou function, il faut exporter chaque fichier sinon impossible de l'importer\r\nexport default Game\r\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":66,"column":28,"nodeType":"34","messageId":"35","endLine":66,"endColumn":30},{"ruleId":"32","severity":1,"message":"33","line":68,"column":28,"nodeType":"34","messageId":"35","endLine":68,"endColumn":30},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]